@import "@/styles/mixins";

.container {
  position: fixed;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  background-color: var(--items-bg-color);
  color: var(--labels-color);
  box-shadow: var(--box-shadow);
  z-index: 100;
  padding: 1rem;
  border-radius: 25px;
  width: fit-content;
  overflow: visible;

  // Mobile styles
  @include respond-to($breakpoint-sm, max) {
    bottom: 1rem;
    left: 1rem;
    right: 1rem;
    width: auto;
    transform: none;
    border-radius: 20px;
    padding: 0.75rem;
  }

  .content {
    display: flex;
    align-items: center;
    gap: 2rem;
    overflow: visible;

    // Mobile styles
    @include respond-to($breakpoint-sm, max) {
      justify-content: space-around;
      gap: 0;
    }
  }

  .navItem {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem;
    cursor: pointer;
    text-decoration: none;
    color: inherit;
    background: none;
    border: none;
    font: inherit;
    outline: inherit;
    border-radius: 50%;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.5, 1);
    min-width: 48px;
    min-height: 48px;

    // Mobile styles
    @include respond-to($breakpoint-sm, max) {
      padding: 0.5rem;
      min-width: 44px;
      min-height: 44px;
      flex: 1;
      max-width: 60px;
    }

    &:hover {
      background-color: var(--background-color);
      @include change-color(var(--primary-color));
      transform: scale(1.4) translateY(-12px);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
      z-index: 10;

      // Mobile hover (touch devices)
      @include respond-to($breakpoint-sm, max) {
        transform: scale(1.1) translateY(-4px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      }
    }

    // Mobile active/focus states
    &:active {
      @include respond-to($breakpoint-sm, max) {
        transform: scale(0.95);
        transition: all 0.1s ease;
      }
    }

    &:focus {
      @include change-color(var(--primary-color));
      background-color: var(--background-color);
    }

    // Active state for filter button
    &.active {
      @include change-color(var(--primary-color));
      background-color: var(--background-color);
      
      @include respond-to($breakpoint-sm, max) {
        transform: scale(1.05);
      }
    }
  }

  .icon {
    color: var(--labels-color);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.5, 1);

    // Mobile icon sizes
    @include respond-to($breakpoint-sm, max) {
      width: 20px;
      height: 20px;
    }

    .navItem:hover & {
      transform: scale(1.3);

      // Mobile icon scaling
      @include respond-to($breakpoint-sm, max) {
        transform: scale(1.1);
      }
    }

    .navItem.active & {
      @include respond-to($breakpoint-sm, max) {
        transform: scale(1.05);
      }
    }
  }
}
